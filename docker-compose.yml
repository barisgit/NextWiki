services:
  # TODO: Do not use hardcoded values here, use env_file
  db:
    image: postgres:17-alpine
    container_name: nextwiki_db
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose DB port to host for potential external access/debugging
    environment:
      # Hardcode DB credentials instead of using root .env
      POSTGRES_DB: nextwiki
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [
          "CMD-SHELL",
          # Use hardcoded values here too for the healthcheck
          "pg_isready -U postgres -d nextwiki",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nextwiki_net

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: nextwiki_web
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    # Use env_file to load variables from apps/web/.env
    env_file:
      - apps/web/.env
    networks:
      - nextwiki_net

  backend:
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: nextwiki_backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy
    # Use env_file to load variables from apps/backend/.env (assuming it exists or will be created)
    env_file:
      - apps/backend/.env
    networks:
      - nextwiki_net

networks:
  nextwiki_net:
    driver: bridge

volumes:
  postgres_data:
    driver: local
